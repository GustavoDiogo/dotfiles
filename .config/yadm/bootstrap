#!/bin/bash
set -e

# Colors and emojis
GREEN="\033[1;32m"
YELLOW="\033[1;33m"
RED="\033[1;31m"
BLUE="\033[1;34m"
CYAN="\033[1;36m"
RESET="\033[0m"

info() { echo -e "${BLUE}ℹ️  $1${RESET}"; }
success() { echo -e "${GREEN}✅ $1${RESET}"; }
warn() { echo -e "${YELLOW}⚠️  $1${RESET}"; }
error() { echo -e "${RED}❌ $1${RESET}"; }

info "🚀 Running YADM bootstrap script..."

sudo apt update

# Install CLI tools only if not already installed
cli_tools=(vim curl wget build-essential)
cli_to_install=()
for tool in "${cli_tools[@]}"; do
  if ! dpkg -s "$tool" &> /dev/null; then
    cli_to_install+=("$tool")
  fi
done
if [ ${#cli_to_install[@]} -ne 0 ]; then
info "Installing CLI Tools: ${cli_to_install[*]}..."
  sudo apt install -y "${cli_to_install[@]}"
else
success "All CLI Tools already installed. Skipping."
fi

# Install Shell & Terminal utilities only if not already installed
shell_utils=(terminator zsh stow zsh-syntax-highlighting zsh-autosuggestions)
shell_utils_to_install=()
for util in "${shell_utils[@]}"; do
  if ! dpkg -s "$util" &> /dev/null; then
    shell_utils_to_install+=("$util")
  fi
done
if [ ${#shell_utils_to_install[@]} -ne 0 ]; then
info "Installing Shell & Terminal utilities: ${shell_utils_to_install[*]}..."
  sudo apt install -y "${shell_utils_to_install[@]}"
else
success "All Shell & Terminal utilities already installed. Skipping."
fi

if ! command -v docker &> /dev/null; then
    info "Installing Docker..."
    sudo apt install -y docker.io docker-compose
    sudo systemctl start docker
    sudo systemctl enable docker
    sudo usermod -aG docker $USER
    success "Docker installed and user added to docker group. Please log out and back in for changes to take effect."
else
    success "Docker is already installed. Skipping."
fi

if ! grep -qE "^$(whoami):.*:$(which zsh)$" /etc/passwd; then
  info "Setting up Zsh as the default shell..."
  chsh -s "$(which zsh)"
else
  success "Zsh is already the default shell. Skipping."
fi

if [ ! -d "$HOME/.oh-my-zsh" ]; then
  info "Installing Oh My Zsh..."
  RUNZSH=no sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
else
  success "Oh My Zsh already installed. Skipping."
fi

ZSH_CUSTOM="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}"
if [ ! -d "$ZSH_CUSTOM/themes/spaceship-prompt" ]; then
  info "Downloading and installing Spaceship Prompt theme..."
  mkdir -p "$ZSH_CUSTOM/themes"
  chown -R "$USER":"$USER" "$ZSH_CUSTOM"
  git clone https://github.com/spaceship-prompt/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt" --depth=1
else
  success "Spaceship Prompt theme already installed. Skipping clone."
fi

if [ ! -L "$ZSH_CUSTOM/themes/spaceship.zsh-theme" ]; then
  ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"
else
  success "Spaceship Prompt symlink already exists. Skipping."
fi

if [ ! -d "$HOME/.nvm" ]; then
  info "📦 Installing NVM and Node.js..."
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
  export NVM_DIR="$HOME/.nvm"
  source "$NVM_DIR/nvm.sh"
  nvm install --lts
  nvm use --lts
else
  success "NVM is already installed. Skipping."
fi

if ! command -v code &> /dev/null; then
    sudo apt-get install wget gpg
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
    sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
    echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" |sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null
    rm -f packages.microsoft.gpg
    sudo apt -y install apt-transport-https
    sudo apt update
    sudo apt install code 
else 
    success "Visual Studio Code is already installed. Skipping."
fi

if ! command -v discord &> /dev/null; then
    info "Installing Discord..."
    sudo snap install discord
else
    success "Discord is already installed. Skipping."
fi

if ! command -v brave-browser &> /dev/null; then
    info "Installing Brave Browser..."
    curl -fsS https://dl.brave.com/install.sh | sh
else
    success "Brave Browser is already installed. Skipping."
fi

if ! command -v google-chrome &> /dev/null; then
    info "Installing Google Chrome..."
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    apt install -y ./google-chrome-stable_current_amd64.deb
    rm google-chrome-stable_current_amd64.deb
else
    success "Google Chrome is already installed. Skipping."
fi

# Ensure Discord .desktop file exists for GNOME favorites
if [ -f /var/lib/snapd/desktop/applications/discord_discord.desktop ]; then
  cp /var/lib/snapd/desktop/applications/discord_discord.desktop ~/.local/share/applications/discord.desktop
fi

# Install Spotify (Snap)
if ! command -v spotify &> /dev/null; then
    info "Installing Spotify..."
    sudo snap install spotify
else
    success "Spotify is already installed. Skipping."
fi

# Ensure Spotify .desktop file exists for GNOME favorites
if [ -f /var/lib/snapd/desktop/applications/spotify_spotify.desktop ]; then
  cp /var/lib/snapd/desktop/applications/spotify_spotify.desktop ~/.local/share/applications/spotify.desktop
fi

info "Setting GNOME favorites..."

gsettings set org.gnome.shell favorite-apps "['brave-browser.desktop', 'google-chrome.desktop', 'org.gnome.Nautilus.desktop', 'terminator.desktop', 'code.desktop', 'discord.desktop', 'spotify.desktop']"

success "🎉 Bootstrap complete."