#!/bin/bash
set -e

echo "ðŸš€ Running YADM bootstrap script..."

sudo apt update

# Install CLI tools only if not already installed
cli_tools=(vim curl wget build-essential)
cli_to_install=()
for tool in "${cli_tools[@]}"; do
  if ! dpkg -s "$tool" &> /dev/null; then
    cli_to_install+=("$tool")
  fi
done
if [ ${#cli_to_install[@]} -ne 0 ]; then
  echo "Installing CLI Tools: ${cli_to_install[*]}..."
  sudo apt install -y "${cli_to_install[@]}"
else
  echo "All CLI Tools already installed. Skipping."
fi

# Install Shell & Terminal utilities only if not already installed
shell_utils=(zsh stow zsh-syntax-highlighting zsh-autosuggestions)
shell_utils_to_install=()
for util in "${shell_utils[@]}"; do
  if ! dpkg -s "$util" &> /dev/null; then
    shell_utils_to_install+=("$util")
  fi
done
if [ ${#shell_utils_to_install[@]} -ne 0 ]; then
  echo "Installing Shell & Terminal utilities: ${shell_utils_to_install[*]}..."
  sudo apt install -y "${shell_utils_to_install[@]}"
else
  echo "All Shell & Terminal utilities already installed. Skipping."
fi

if ! command -v docker &> /dev/null; then
    echo "Installing Docker..."
    sudo apt install -y docker.io docker-compose
    sudo systemctl start docker
    sudo systemctl enable docker
    sudo usermod -aG docker $USER
    echo "Docker installed and user added to docker group. Please log out and back in for
    changes to take effect."
else
    echo "Docker is already installed. Skipping."
fi

if [ "$SHELL" != "$(which zsh)" ]; then
  echo "Setting up Zsh as the default shell..."
  chsh -s "$(which zsh)"
else
  echo "Zsh is already the default shell. Skipping."
fi

if [ ! -d "$HOME/.oh-my-zsh" ]; then
  echo "Installing Oh My Zsh..."
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
else
  echo "Oh My Zsh already installed. Skipping."
fi

if [ ! -d "$ZSH_CUSTOM/themes/spaceship-prompt" ]; then
  echo "Downloading and installing Spaceship Prompt theme..."
  git clone https://github.com/spaceship-prompt/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt" --depth=1
else
  echo "Spaceship Prompt theme already installed. Skipping clone."
fi

if [ ! -L "$ZSH_CUSTOM/themes/spaceship.zsh-theme" ]; then
  ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"
else
  echo "Spaceship Prompt symlink already exists. Skipping."
fi

if [ ! -d "$HOME/.nvm" ]; then
  echo "ðŸ“¦ Installing NVM and Node.js..."
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
  export NVM_DIR="$HOME/.nvm"
  source "$NVM_DIR/nvm.sh"
  nvm install --lts
  nvm use --lts
else
  echo "NVM is already installed. Skipping."
fi

if ! command -v code &> /dev/null; then
    sudo apt-get install wget gpg
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
    sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
    echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" |sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null
    rm -f packages.microsoft.gpg
    sudo apt install apt-transport-https
    sudo apt update
    sudo apt install code 
else 
    echo "Visual Studio Code is already installed. Skipping."
fi

if ! command -v discord &> /dev/null; then
    echo "Installing Discord..."
    sudo snap install discord
else
    echo "Discord is already installed. Skipping."
fi

if ! command -v brave-browser &> /dev/null; then
    echo "Installing Brave Browser..."
    curl -fsS https://dl.brave.com/install.sh | sh
else
    echo "Brave Browser is already installed. Skipping."
fi

if !command -v google-chrome &> /dev/null; then
    echo "Installing Google Chrome..."
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    sudo apt install -y ./google-chrome-stable_current_amd64.deb
    rm google-chrome-stable_current_amd64.deb
else
    echo "Google Chrome is already installed. Skipping."
fi

echo "âœ… Bootstrap complete."